#!/usr/bin/perl -w
#
# TTUC - the Tabyretka UML Compiler
#

use strict;

my $input_file = shift @ARGV or die "Usage: ttuc <input-file>";

my %hash = eval `cat $input_file`;

my $header_tmpl = 'template/template.htp';
my $source_tmpl = 'template/template.cpptp';

( my $classname_upper = $hash{name} ) =~ s/(\w)/\u\L$1/g;
( my $classname_lower = $hash{name} ) =~ s/(\w)/\l\L$1/g;

my $header_out = "uml_$classname_lower.h";
my $source_out = "uml_$classname_lower.cpp";
my $property_list = "";

do_subst ($header_tmpl, $header_out);
do_subst ($source_tmpl, $source_out);


sub do_subst {
    my $input = shift @_;
    my $output = shift @_;

    open (INPUT,  "< $input") or die "Cannot open input file $input: $!";
    open (OUTPUT, "> $output") or die "Cannot open output file $output: $!";

    print OUTPUT "// Generated by uml generator at " . `LC_ALL=C date` . "\n";

    while (<INPUT>) {
	s|\@\@ClassName\@\@|$hash{name}|g;
        s|\@\@CLASSNAME\@\@|$classname_upper|g;
	s|\@\@classname\@\@|$classname_lower|g;
	
	s|\@\@PropertyList\@\@|$property_list|g;

        print OUTPUT $_;
    }

    close (INPUT);
    close (OUTPUT);
}


#formy $key (keys %$hash{props} ) {
#    print $key;
#    print "\n";
#}

#print $hash{QString};
#print "\n";
